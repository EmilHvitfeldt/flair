% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flaired_code.R
\name{flaired_code}
\alias{flaired_code}
\title{Creates an object of the class \code{flaired_code}}
\usage{
flaired_code(.code_string, eval = TRUE, shatter = TRUE)
}
\arguments{
\item{.code_string}{A string containing executable R code OR a valid expression that will be converted to a string via \code{deparse()}}

\item{eval}{A boolean specifying whether the code should be immediately evaluated, in addition to creating the \code{flaired_code} object. (Defaults to \code{TRUE})}
}
\value{
A \code{flaired_code} object.
}
\description{
\code{flaired_code} objects are evaluated R code, returned from \code{evaluate::evaluate}, with an attached attribute called \code{print_string} which sets up fancy formatting for knitting.
}
\examples{

# When run in console, this will print only the results of mean(1:10)
my_flair <- flaired_code('mean(1:10)') \%>\% hlt_funs()

# The flaired_code object itself has no output

my_flair

# However, when knitted, the source code is formatted.

attr(my_flair, "print_string")


# Objects defined in flaired_code are created in the environment

flaired_code('foo <- mean(1:10)')

foo + 5

}
\seealso{
\code{\link{highlight}}, \code{\link{_chunk}}
}
